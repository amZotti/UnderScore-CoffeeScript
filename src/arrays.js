// Generated by CoffeeScript 1.8.0
(function() {
  _.first = _.head = _.take = function(array, n) {
    var _i, _results;
    if (n == null) {
      n = 0;
    }
    if (n === 0) {
      return array[0];
    }
    if (n >= _.size(array)) {
      return array;
    }
    return _.map((function() {
      _results = [];
      for (var _i = 0; 0 <= n ? _i < n : _i > n; 0 <= n ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this), function(value) {
      return array[value];
    });
  };

  _.initial = function(array, n) {
    var _i, _ref, _results;
    if (n == null) {
      n = 0;
    }
    if (n === 0) {
      return array.pop() && array;
    }
    if (n >= _.size(array)) {
      return [];
    }
    return _.map((function() {
      _results = [];
      for (var _i = 0, _ref = _.size(array) - n; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this), function(value) {
      return array[value];
    });
  };

  _.last = function(array, n) {
    var size, _i, _ref, _results;
    if (n == null) {
      n = 0;
    }
    size = _.size(array);
    if (n === 0) {
      return array[size - 1];
    }
    if (n >= size) {
      return array;
    }
    return _.map((function() {
      _results = [];
      for (var _i = _ref = n - 1; _ref <= size ? _i < size : _i > size; _ref <= size ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this), function(value) {
      return array[value];
    });
  };

  _.rest = _.tail = _.drop = function(array, index) {
    var size, _i, _results;
    if (index == null) {
      index = 1;
    }
    size = _.size(array);
    if (index >= size) {
      return [];
    }
    return _.map((function() {
      _results = [];
      for (var _i = index; index <= size ? _i < size : _i > size; index <= size ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this), function(value) {
      return array[value];
    });
  };

  _.compact = function(array) {
    return _.filter(array, function(value) {
      return !!value;
    });
  };

}).call(this);
